#!/usr/bin/env python3

import stat
import subprocess
import sys
from pathlib import Path


def run(cmd: list):
    args = [cmd[0].resolve() if isinstance(cmd[0], Path) else cmd[0]] + cmd[1:]
    # if sys.stderr.isatty():
    #     print("\x1b[0;36m> " + " ".join(map(str, args)) + "\x1b[0m", file=sys.stderr)
    if code := subprocess.run(list(map(str, args))).returncode:
        exit(code)
    return True


SUFFIXES = {
    "clj": lambda path, args: run(["clojure", path] + args),
    "py": lambda path, args: run(["pypy3.10", path] + args),
    "rb": lambda path, args: run(["ruby", path] + args),
    "js": lambda path, args: run(["node", path] + args),
    "cpp": lambda path, args: run(["g++", "-Ofast", "-o", path.with_suffix(""), path]) and
                              run([path.with_suffix("")] + args),
    "c": lambda path, args: run(["gcc", "-Ofast", "-o", path.with_suffix(""), path]) and
                            run([path.with_suffix("")] + args),
    "asm": lambda path, args:
        run(["yasm", "-gdwarf2", "-felf64", path, f"-l{path.with_suffix('')}"]) and
        run(["ld", "-g", "-o", path.with_suffix(""), path.with_suffix(".o")]) and
        run([path.with_suffix("")] + args)
}


def main(args):
    app, *arguments = args
    path = Path(app)
    if path.stat().st_mode & stat.S_IXUSR:
        run([path] + arguments)
        return
    shebang = (path.read_text().split("\n") or [""])[0]
    if shebang.startswith("#!/"):
        run(shebang.removeprefix("#!").split(" ", 1) + [path] + arguments)
        return
    if f := SUFFIXES.get(path.suffix.strip(".")):
        f(path, arguments)
        return
    print(f"I don't know how to run {path}", file=sys.stderr)


if __name__ == "__main__":
    try:
        main(sys.argv[1:])
    except KeyboardInterrupt:
        exit(130)
