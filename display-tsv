#!/usr/bin/env python3
"""
Show specified TSV file in terminal.

Usage: {script} [options] PATH

Arguments:
    PATH - Path to the TSV file.

Options:
    -h, --help
        Show this screen and exit.
"""
import sys
import os
from contextlib import suppress
from pathlib import Path


def main(script_name: str, *script_args: str):
    doc = __doc__.format(script=Path(script_name).name)
    args = __import__("docopt").docopt(doc, script_args)
    path = Path(args["PATH"])
    lines = path.read_text().splitlines()
    column_sizes = [0]
    column_just = [False]
    for line_number, line in enumerate(lines, 1):
        row = line.split("\t")
        column_sizes[0] = len(str(line_number))
        for i, field in enumerate(row, 1):
            if i >= len(column_sizes):
                column_sizes.append(0)
                column_just.append(False)
            column_just[i] |= not field.isdigit()
            column_sizes[i] = max(column_sizes[i], len(field))
    w, h = os.get_terminal_size()
    padding = (w - sum(column_sizes) - 1) // (len(column_sizes) - 1)
    padding = " " * max(1, min(padding, 5))
    for row_number, line in enumerate(lines, 1):
        row = [str(row_number) if row_number != 1 else "/"] + line.split("\t")
        row += [""] * (len(column_sizes) - len(row))
        row = [
            ("\x1b[9" + str(i % 10) + "m")
            + (field.ljust(column_sizes[i]) if column_just[i] else field.rjust(column_sizes[i]))
            + "\x1b[0m"
            for i, field in enumerate(row)
        ]
        print(" " + padding.join(row))


if __name__ == "__main__":
    with suppress(KeyboardInterrupt):
        main(sys.argv[0], *sys.argv[1:])
